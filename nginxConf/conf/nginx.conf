#教程见 http://openresty.org/download/agentzh-nginx-tutorials-zhcn.html
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    server {
        listen 8080;


        #13.echo_location指令父子变量不是共用的,都有各自的副本,但有些指令父子请求变量又是公用的,比如 auth_request 指令
        location /main {
            set $var main;

            echo_location /foo;
            echo_location /bar;

            echo "main: $var";
        }

        location /foo {
            set $var foo;
            echo "foo: $var";
        }

        location /bar {
            set $var bar;
            echo "bar: $var";
        }

        #12.主请求-子请求 过第三方 ngx_echo 模块的 echo_location 指令分别发起到 /foo 和 /bar 这两个接口的 GET 类型的“子请求”。
        #由 echo_location 发起的“子请求”，其执行是按照配置书写的顺序串行处理的，
        #即只有当 /foo 请求处理完毕之后，才会接着处理 /bar 请求。这两个“子请求”的输出会按执行顺序拼接起来，作为 /main 接口的最终输出：
#        location /main {
#            echo_location /foo;
#            echo_location /bar;
#        }
#
#        location /foo {
#            echo foo;
#        }
#
#        location /bar {
#            echo bar;
#        }

    }


}
